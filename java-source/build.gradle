apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'maven-publish'

repositories {
    flatDir {
        dirs '../lib/dependencies'
    }
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
    test {
        resources {
            srcDir "../config/test"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlin_version"


    // Corda integration dependencies
    compile "net.corda:core:$corda_version"
    compile "net.corda:finance:$corda_version"
    compile "net.corda:jackson:$corda_version"
    compile "net.corda:node:$corda_version"
    compile "net.corda:node-api:$corda_version"
    compile "net.corda:rpc:$corda_version"
    compile "net.corda:webserver:$corda_version"
    runtime "net.corda:corda:$corda_version"
    runtime "net.corda:corda-webserver:$corda_version"

    compile "com.google.guava:guava:21.0"
    compile "org.glassfish.jersey.core:jersey-server:2.25"
    compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
    compile "io.reactivex:rxjava:1.2.4"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.7"
    compile "org.apache.logging.log4j:log4j-core:2.7"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "co.paralleluniverse:quasar-core:0.7.6:jdk8"
    compile "org.apache.activemq:artemis-commons:1.5.3"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "net.corda:test-utils:$corda_version"

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['build']) {
    directory "./build/nodes"
    networkMap "Controller"
    node {
        name "Controller"
        nearestCity "London"
        advertisedServices = ["corda.notary.validating"]
        p2pPort 10002
        rpcPort 10003
        cordapps = []
    }
    node {
        name "NodeA"
        nearestCity "London"
        advertisedServices = []
        p2pPort 10005
        rpcPort 10006
        webPort 10007
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "NodeB"
        nearestCity "New York"
        advertisedServices = []
        p2pPort 10008
        rpcPort 10009
        webPort 10010
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "NodeC"
        nearestCity "San Francisco"
        advertisedServices = []
        p2pPort 10011
        rpcPort 10012
        webPort 10013
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
}

// TODO: Make into gradle plugin without any references to Jython
task installJythonDeps(dependsOn: ['build']) {
    project.copy {
        from project.configurations.runtime
        into "build/jythonDeps"
    }
}

installJythonDeps.shouldRunAfter build

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

publishing {
    publications {
        jarAndSources(MavenPublication) {
            from components.java
            artifactId 'cordapp-name-goes-here'

            artifact sourceJar
            artifact javadocJar
        }
    }
}

task runTemplateClientRPC(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.client.TemplateClientRPC'
    args 'localhost:10006'
}
